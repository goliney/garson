{"version":3,"sources":["../../src/prompts/use-key-handler.ts"],"names":["useKeyHandler","keyHandler","StdinContext","stdin","setRawMode","on","off"],"mappings":";;;;;;;AAAA;;AACA;;AAIO,SAASA,aAAT,CAAuBC,UAAvB,EAAmD;AAAA,sBAC1B,uBAAWC,iBAAX,CAD0B;AAAA,QAChDC,KADgD,eAChDA,KADgD;AAAA,QACzCC,UADyC,eACzCA,UADyC;;AAGxD,wBAAU,MAAM;AACd,QAAIA,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDD,IAAAA,KAAK,CAACE,EAAN,CAAS,MAAT,EAAiBJ,UAAjB;AACA,WAAO,MAAM;AACXE,MAAAA,KAAK,CAACG,GAAN,CAAU,MAAV,EAAkBL,UAAlB;;AACA,UAAIG,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KALD;AAMD,GAXD,EAWG,CAACD,KAAD,EAAQC,UAAR,EAAoBH,UAApB,CAXH;AAYD","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { StdinContext } from 'ink';\n\ntype KeyHandlerType = (data: string) => void;\n\nexport function useKeyHandler(keyHandler: KeyHandlerType) {\n  const { stdin, setRawMode } = useContext(StdinContext);\n\n  useEffect(() => {\n    if (setRawMode) {\n      setRawMode(true);\n    }\n    stdin.on('data', keyHandler);\n    return () => {\n      stdin.off('data', keyHandler);\n      if (setRawMode) {\n        setRawMode(false);\n      }\n    };\n  }, [stdin, setRawMode, keyHandler]);\n}\n"],"file":"use-key-handler.js"}