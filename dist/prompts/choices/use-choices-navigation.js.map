{"version":3,"sources":["../../../src/prompts/choices/use-choices-navigation.ts"],"names":["useChoicesNavigation","items","activeItem","setActiveItem","selectPrevItem","length","indexOfActive","indexOf","prevItemIndex","Math","max","selectNextItem","nextItemIndex","min","handleKey","key","ARROW_UP","ARROW_DOWN"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAGO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqD;AAAA,oBACtB,qBAASA,KAAK,CAAC,CAAD,CAAd,CADsB;AAAA;AAAA,QACnDC,UADmD;AAAA,QACvCC,aADuC;;AAG1D,wBAAU,MAAM;AACdA,IAAAA,aAAa,CAACF,KAAK,CAAC,CAAD,CAAN,CAAb;AACD,GAFD,EAEG,CAACA,KAAD,CAFH;AAIA,QAAMG,cAAc,GAAG,wBAAY,MAAM;AACvC,QAAIH,KAAK,CAACI,MAAN,KAAiB,CAAjB,IAAsB,CAACH,UAA3B,EAAuC;AACrC;AACD;;AACD,UAAMI,aAAa,GAAGL,KAAK,CAACM,OAAN,CAAcL,UAAd,CAAtB;AACA,UAAMM,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASJ,aAAa,GAAG,CAAzB,EAA4B,CAA5B,CAAtB;AACAH,IAAAA,aAAa,CAACF,KAAK,CAACO,aAAD,CAAN,CAAb;AACD,GAPsB,EAOpB,CAACN,UAAD,EAAaD,KAAb,CAPoB,CAAvB;AASA,QAAMU,cAAc,GAAG,wBAAY,MAAM;AACvC,QAAIV,KAAK,CAACI,MAAN,KAAiB,CAAjB,IAAsB,CAACH,UAA3B,EAAuC;AACrC;AACD;;AACD,UAAMI,aAAa,GAAGL,KAAK,CAACM,OAAN,CAAcL,UAAd,CAAtB;AACA,UAAMU,aAAa,GAAGH,IAAI,CAACI,GAAL,CAASP,aAAa,GAAG,CAAzB,EAA4BL,KAAK,CAACI,MAAN,GAAe,CAA3C,CAAtB;AACAF,IAAAA,aAAa,CAACF,KAAK,CAACW,aAAD,CAAN,CAAb;AACD,GAPsB,EAOpB,CAACV,UAAD,EAAaD,KAAb,CAPoB,CAAvB;AASA,QAAMa,SAAS,GAAG,wBAChBC,GAAG,IAAI;AACL,YAAQA,GAAR;AACE,WAAKC,cAAL;AACEZ,QAAAA,cAAc;AACd;;AACF,WAAKa,gBAAL;AACEN,QAAAA,cAAc;AACd;;AACF;AACE;AARJ;AAUD,GAZe,EAahB,CAACP,cAAD,EAAiBO,cAAjB,CAbgB,CAAlB;AAgBA,8BAAcG,SAAd;AAEA,SAAOZ,UAAP;AACD","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useKeyHandler } from '../_helpers';\nimport { ARROW_DOWN, ARROW_UP } from '../_helpers/keys';\nimport { ChoiceOption } from './components/item';\n\nexport function useChoicesNavigation(items: ChoiceOption[]) {\n  const [activeItem, setActiveItem] = useState(items[0]);\n\n  useEffect(() => {\n    setActiveItem(items[0]);\n  }, [items]);\n\n  const selectPrevItem = useCallback(() => {\n    if (items.length === 0 || !activeItem) {\n      return;\n    }\n    const indexOfActive = items.indexOf(activeItem);\n    const prevItemIndex = Math.max(indexOfActive - 1, 0);\n    setActiveItem(items[prevItemIndex]);\n  }, [activeItem, items]);\n\n  const selectNextItem = useCallback(() => {\n    if (items.length === 0 || !activeItem) {\n      return;\n    }\n    const indexOfActive = items.indexOf(activeItem);\n    const nextItemIndex = Math.min(indexOfActive + 1, items.length - 1);\n    setActiveItem(items[nextItemIndex]);\n  }, [activeItem, items]);\n\n  const handleKey = useCallback(\n    key => {\n      switch (key) {\n        case ARROW_UP:\n          selectPrevItem();\n          break;\n        case ARROW_DOWN:\n          selectNextItem();\n          break;\n        default:\n          break;\n      }\n    },\n    [selectPrevItem, selectNextItem],\n  );\n\n  useKeyHandler(handleKey);\n\n  return activeItem;\n}\n"],"file":"use-choices-navigation.js"}