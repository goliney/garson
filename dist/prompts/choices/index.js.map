{"version":3,"sources":["../../../src/prompts/choices/index.tsx"],"names":["ChoicesComponent","message","items","onSubmit","activeItem","setActiveItem","selectNextItem","indexOfActive","indexOf","nextItemIndex","Math","min","length","selectPrevItem","prevItemIndex","max","submitResult","value","data","s","String","ARROW_UP","ARROW_DOWN","ENTER","map","item","label","choices"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAmBO,SAASA,gBAAT,CAA0B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAA1B,EAAsE;AAAA,oBACvC,qBAASD,KAAK,CAAC,CAAD,CAAd,CADuC;AAAA;AAAA,QACpEE,UADoE;AAAA,QACxDC,aADwD;;AAG3E,wBAAU,MAAM;AACdA,IAAAA,aAAa,CAACH,KAAK,CAAC,CAAD,CAAN,CAAb;AACD,GAFD,EAEG,CAACA,KAAD,CAFH;AAIA,QAAMI,cAAc,GAAG,wBAAY,MAAM;AACvC,UAAMC,aAAa,GAAGL,KAAK,CAACM,OAAN,CAAcJ,UAAd,CAAtB;AACA,UAAMK,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASJ,aAAa,GAAG,CAAzB,EAA4BL,KAAK,CAACU,MAAN,GAAe,CAA3C,CAAtB;AACAP,IAAAA,aAAa,CAACH,KAAK,CAACO,aAAD,CAAN,CAAb;AACD,GAJsB,EAIpB,CAACL,UAAD,EAAaF,KAAb,CAJoB,CAAvB;AAMA,QAAMW,cAAc,GAAG,wBAAY,MAAM;AACvC,UAAMN,aAAa,GAAGL,KAAK,CAACM,OAAN,CAAcJ,UAAd,CAAtB;AACA,UAAMU,aAAa,GAAGJ,IAAI,CAACK,GAAL,CAASR,aAAa,GAAG,CAAzB,EAA4B,CAA5B,CAAtB;AACAF,IAAAA,aAAa,CAACH,KAAK,CAACY,aAAD,CAAN,CAAb;AACD,GAJsB,EAIpB,CAACV,UAAD,EAAaF,KAAb,CAJoB,CAAvB;AAMA,QAAMc,YAAY,GAAG,wBAAY,MAAM;AACrCb,IAAAA,QAAQ,CAACC,UAAU,CAACa,KAAZ,CAAR;AACD,GAFoB,EAElB,CAACb,UAAD,EAAaD,QAAb,CAFkB,CAArB;AAIA,oCAAce,IAAI,IAAI;AACpB,UAAMC,CAAC,GAAGC,MAAM,CAACF,IAAD,CAAhB;;AAEA,YAAQC,CAAR;AACE,WAAKE,cAAL;AACER,QAAAA,cAAc;AACd;;AACF,WAAKS,gBAAL;AACEhB,QAAAA,cAAc;AACd;;AACF,WAAKiB,WAAL;AACEP,QAAAA,YAAY;AACZ;;AACF;AACE;AAXJ;AAaD,GAhBD;AAkBA,SACE,6BAAC,cAAD,CAAO,QAAP,QACE,6BAAC,QAAD,QACE,6BAAC,UAAD;AAAO,IAAA,KAAK;AAAZ,KAAcf,OAAd,CADF,CADF,EAIGC,KAAK,CAACsB,GAAN,CAAUC,IAAI,IACb,6BAAC,QAAD;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACR;AAAf,KACGQ,IAAI,KAAKrB,UAAT,IAAuB,6BAAC,UAAD;AAAO,IAAA,IAAI;AAAX,KAAaqB,IAAI,CAACC,KAAlB,CAD1B,EAEGD,IAAI,KAAKrB,UAAT,IAAuB,6BAAC,UAAD;AAAO,IAAA,IAAI;AAAX,KAAaqB,IAAI,CAACC,KAAlB,CAF1B,CADD,CAJH,CADF;AAaD;;AAEM,SAASC,OAAT,CAAiB;AAAE1B,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjB,EAA8C;AACnD,SAAQC,QAAD,IACL,6BAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEF,OAA3B;AAAoC,IAAA,KAAK,EAAEC,KAA3C;AAAkD,IAAA,QAAQ,EAAEC;AAA5D,IADF;AAGD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Color } from 'ink';\nimport { ARROW_DOWN, ARROW_UP, ENTER } from '../keys';\nimport { useKeyHandler } from '../use-key-handler';\nimport { onSubmitCallback } from '../../types';\n\ntype choiceValue = any;\n\ninterface ChoiceOption {\n  label: string;\n  value: choiceValue;\n}\n\ninterface Choices {\n  message: string;\n  items: ChoiceOption[];\n}\n\ninterface ChoicesProps extends Choices {\n  onSubmit: onSubmitCallback;\n}\n\nexport function ChoicesComponent({ message, items, onSubmit }: ChoicesProps) {\n  const [activeItem, setActiveItem] = useState(items[0]);\n\n  useEffect(() => {\n    setActiveItem(items[0]);\n  }, [items]);\n\n  const selectNextItem = useCallback(() => {\n    const indexOfActive = items.indexOf(activeItem);\n    const nextItemIndex = Math.min(indexOfActive + 1, items.length - 1);\n    setActiveItem(items[nextItemIndex]);\n  }, [activeItem, items]);\n\n  const selectPrevItem = useCallback(() => {\n    const indexOfActive = items.indexOf(activeItem);\n    const prevItemIndex = Math.max(indexOfActive - 1, 0);\n    setActiveItem(items[prevItemIndex]);\n  }, [activeItem, items]);\n\n  const submitResult = useCallback(() => {\n    onSubmit(activeItem.value);\n  }, [activeItem, onSubmit]);\n\n  useKeyHandler(data => {\n    const s = String(data);\n\n    switch (s) {\n      case ARROW_UP:\n        selectPrevItem();\n        break;\n      case ARROW_DOWN:\n        selectNextItem();\n        break;\n      case ENTER:\n        submitResult();\n        break;\n      default:\n        break;\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <Box>\n        <Color green>{message}</Color>\n      </Box>\n      {items.map(item => (\n        <Box key={item.value}>\n          {item === activeItem && <Color blue>{item.label}</Color>}\n          {item !== activeItem && <Color gray>{item.label}</Color>}\n        </Box>\n      ))}\n    </React.Fragment>\n  );\n}\n\nexport function choices({ message, items }: Choices) {\n  return (onSubmit: onSubmitCallback) => (\n    <ChoicesComponent message={message} items={items} onSubmit={onSubmit} />\n  );\n}\n"],"file":"index.js"}