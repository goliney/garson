{"version":3,"sources":["../../../src/prompts/fuzzy-path/utils.ts"],"names":["readdir","util","promisify","fs","listNodes","nodePath","nodes","currentNode","length","nodesWithPath","map","nodeName","path","join","subNodes","Promise","all","reduce","acc","val","concat","err","code"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,OAAO,GAAGC,cAAKC,SAAL,CAAeC,YAAGH,OAAlB,CAAhB;;SAEsBI,S;;;;;iCAAf,WAAyBC,QAAzB,EAA8D;AACnE,QAAI;AACF,YAAMC,KAAK,SAASN,OAAO,CAACK,QAAD,CAA3B;AACA,YAAME,WAAW,GAAG,CAACF,QAAD,CAApB;;AACA,UAAIC,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB,eAAOD,WAAP;AACD;;AACD,YAAME,aAAa,GAAGH,KAAK,CAACI,GAAN,CAAUC,QAAQ,IAAIP,SAAS,CAACQ,cAAKC,IAAL,CAAUR,QAAV,EAAoBM,QAApB,CAAD,CAA/B,CAAtB;AACA,YAAMG,QAAQ,SAASC,OAAO,CAACC,GAAR,CAAYP,aAAZ,CAAvB;AACA,aAAOK,QAAQ,CAACG,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,MAAJ,CAAWD,GAAX,CAA9B,EAA+CZ,WAA/C,CAAP;AACD,KATD,CASE,OAAOc,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,eAAO,CAACjB,QAAD,CAAP;AACD;;AACD,aAAO,EAAP;AACD;AACF,G","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport util from 'util';\n\nconst readdir = util.promisify(fs.readdir);\n\nexport async function listNodes(nodePath: string): Promise<string[]> {\n  try {\n    const nodes = await readdir(nodePath);\n    const currentNode = [nodePath];\n    if (nodes.length === 0) {\n      return currentNode;\n    }\n    const nodesWithPath = nodes.map(nodeName => listNodes(path.join(nodePath, nodeName)));\n    const subNodes = await Promise.all(nodesWithPath);\n    return subNodes.reduce((acc, val) => acc.concat(val), currentNode);\n  } catch (err) {\n    if (err.code === 'ENOTDIR') {\n      return [nodePath];\n    }\n    return [];\n  }\n}\n"],"file":"utils.js"}