{"version":3,"sources":["../../../src/prompts/fuzzy-path/index.tsx"],"names":["NODES_LIMIT","DEFAULT_PLACEHOLDER","FuzzyPathComponent","message","placeholder","root","onSubmit","nodes","setNodes","pattern","setPattern","getNodes","calculatedNodes","handleSubmit","value","slice","map","node","label","fuzzyPath"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAeA,MAAMA,WAAW,GAAG,CAApB;AAEA,MAAMC,mBAAmB,GAAG,kCAA5B;;AAEO,SAASC,kBAAT,CAA4B;AACjCC,EAAAA,OADiC;AAEjCC,EAAAA,WAAW,GAAGH,mBAFmB;AAGjCI,EAAAA,IAHiC;AAIjCC,EAAAA;AAJiC,CAA5B,EAKY;AAAA,oBACS,qBAAgB,IAAhB,CADT;AAAA;AAAA,QACVC,KADU;AAAA,QACHC,QADG;;AAAA,qBAEa,qBAAiB,EAAjB,CAFb;AAAA;AAAA,QAEVC,OAFU;AAAA,QAEDC,UAFC;;AAIjB,wBAAU,MAAM;AAAA,aACCC,QADD;AAAA;AAAA;;AAAA;AAAA,oCACd,aAA0B;AACxB,cAAMC,eAAe,SAAS,sBAAUP,IAAV,CAA9B;AACAG,QAAAA,QAAQ,CAAC,6BAAiBI,eAAjB,EAAkCH,OAAlC,CAAD,CAAR;AACD,OAJa;AAAA;AAAA;;AAKdE,IAAAA,QAAQ;AACT,GAND,EAMG,CAACN,IAAD,EAAOI,OAAP,CANH;AAQA,QAAMI,YAAY,GAAG,wBACnBC,KAAK,IAAI;AACPR,IAAAA,QAAQ,CAACQ,KAAD,CAAR;AACD,GAHkB,EAInB,CAACR,QAAD,CAJmB,CAArB;AAOA,SACE,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,KACE,6BAAC,qBAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,QAAQ,EAAEM,UAHZ;AAIE,IAAA,QAAQ,EAAE,MAAM,CAAE;AAJpB,IADF,EAOGH,KAAK,IACJ,6BAAC,yBAAD;AACE,IAAA,QAAQ,EAAEM,YADZ;AAEE,IAAA,KAAK,EAAEN,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAef,WAAf,EAA4BgB,GAA5B,CAAgCC,IAAI,KAAK;AAAEC,MAAAA,KAAK,EAAED,IAAT;AAAeH,MAAAA,KAAK,EAAEG;AAAtB,KAAL,CAApC;AAFT,IARJ,CADF;AAgBD;;AAEM,SAASE,SAAT,CAAmB;AAAEhB,EAAAA,OAAF;AAAWE,EAAAA;AAAX,CAAnB,EAAiD;AACtD,SAAQC,QAAD,IACL,6BAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEH,OAA7B;AAAsC,IAAA,IAAI,EAAEE,IAA5C;AAAkD,IAAA,QAAQ,EAAEC;AAA5D,IADF;AAGD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Box } from 'ink';\nimport { listNodes, fuzzySearchNodes, NodesList } from './utils';\nimport { InputComponent } from '../input';\nimport { ChoicesComponent } from '../choices';\nimport { OnSubmitCallback } from '../../types';\n\ninterface FuzzyPath {\n  message?: string;\n  placeholder?: string;\n  root: string;\n}\n\ninterface FuzzyPathProps extends FuzzyPath {\n  onSubmit: OnSubmitCallback;\n}\n\ntype Nodes = NodesList | null;\n\nconst NODES_LIMIT = 7;\n\nconst DEFAULT_PLACEHOLDER = '(Use arrow keys or start typing)';\n\nexport function FuzzyPathComponent({\n  message,\n  placeholder = DEFAULT_PLACEHOLDER,\n  root,\n  onSubmit,\n}: FuzzyPathProps) {\n  const [nodes, setNodes] = useState<Nodes>(null);\n  const [pattern, setPattern] = useState<string>('');\n\n  useEffect(() => {\n    async function getNodes() {\n      const calculatedNodes = await listNodes(root);\n      setNodes(fuzzySearchNodes(calculatedNodes, pattern));\n    }\n    getNodes();\n  }, [root, pattern]);\n\n  const handleSubmit = useCallback(\n    value => {\n      onSubmit(value);\n    },\n    [onSubmit],\n  );\n\n  return (\n    <Box flexDirection=\"column\">\n      <InputComponent\n        message={message}\n        placeholder={placeholder}\n        onChange={setPattern}\n        onSubmit={() => {}}\n      />\n      {nodes && (\n        <ChoicesComponent\n          onSubmit={handleSubmit}\n          items={nodes.slice(0, NODES_LIMIT).map(node => ({ label: node, value: node }))}\n        />\n      )}\n    </Box>\n  );\n}\n\nexport function fuzzyPath({ message, root }: FuzzyPath) {\n  return (onSubmit: OnSubmitCallback) => (\n    <FuzzyPathComponent message={message} root={root} onSubmit={onSubmit} />\n  );\n}\n"],"file":"index.js"}