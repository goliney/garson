{"version":3,"sources":["../../../src/prompts/fuzzy-path/index.tsx"],"names":["MATCHES_LIMIT","DEFAULT_PLACEHOLDER","FuzzyPathComponent","message","placeholder","root","filter","onSubmit","nodes","setNodes","matches","setMatches","pattern","setPattern","activeItem","handleSubmit","value","calculatedNodes","getNodes","searchResults","searchResultsSliced","slice","map","match","key","path","label","relativePath","PatternHighlightItem","fuzzyPath"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAmBA,MAAMA,aAAa,GAAG,CAAtB;AAEA,MAAMC,mBAAmB,GAAG,kCAA5B;;AAEO,SAASC,kBAAT,CAA4B;AACjCC,EAAAA,OADiC;AAEjCC,EAAAA,WAAW,GAAGH,mBAFmB;AAGjCI,EAAAA,IAHiC;AAIjCC,EAAAA,MAJiC;AAKjCC,EAAAA;AALiC,CAA5B,EAMY;AAAA,oBACS,qBAAyB,IAAzB,CADT;AAAA;AAAA,QACVC,KADU;AAAA,QACHC,QADG;;AAAA,qBAEa,qBAA6B,EAA7B,CAFb;AAAA;AAAA,QAEVC,OAFU;AAAA,QAEDC,UAFC;;AAAA,qBAGa,qBAAiB,EAAjB,CAHb;AAAA;AAAA,QAGVC,OAHU;AAAA,QAGDC,UAHC;;AAKjB,QAAMC,UAAU,GAAG,gDAAqBJ,OAArB,CAAnB;AAEA,QAAMK,YAAY,GAAG,wBAAY,MAAM;AACrCR,IAAAA,QAAQ,CAACO,UAAU,CAACE,KAAZ,CAAR;AACD,GAFoB,EAElB,CAACT,QAAD,EAAWO,UAAX,CAFkB,CAArB;AAIA,mCAAmBC,YAAnB,EAXiB,CAajB;;AACA,wBAAU,MAAM;AACd;AAAA,wCAAC,aAA0B;AACzB,cAAME,eAAe,SAAS,sBAAUZ,IAAV,CAA9B;AACAI,QAAAA,QAAQ,CAACQ,eAAe,CAACX,MAAhB,CAAuBA,MAAvB,CAAD,CAAR;AACD,OAHD;;AAAA,eAAgBY,QAAhB;AAAA;AAAA;;AAAA,aAAgBA,QAAhB;AAAA;AAID,GALD,EAKG,CAACb,IAAD,EAAOC,MAAP,CALH,EAdiB,CAqBjB;;AACA,wBAAU,MAAM;AACd,UAAMa,aAAa,GAAG,6BAAiBX,KAAjB,EAAwBI,OAAxB,CAAtB;AACA,UAAMQ,mBAAmB,GAAGD,aAAa,CACtCE,KADyB,CACnB,CADmB,EAChBrB,aADgB,EAEzBsB,GAFyB,CAErBC,KAAK,KAAK;AAAEC,MAAAA,GAAG,EAAED,KAAK,CAACE,IAAb;AAAmBC,MAAAA,KAAK,EAAEH,KAAK,CAACI,YAAhC;AAA8CX,MAAAA,KAAK,EAAEO;AAArD,KAAL,CAFgB,CAA5B;AAGAZ,IAAAA,UAAU,CAACS,mBAAD,CAAV;AACD,GAND,EAMG,CAACZ,KAAD,EAAQI,OAAR,CANH;AAQA,SACE,6BAAC,QAAD;AAAK,IAAA,aAAa,EAAC;AAAnB,KACE,6BAAC,qBAAD;AAAgB,IAAA,OAAO,EAAET,OAAzB;AAAkC,IAAA,WAAW,EAAEC,WAA/C;AAA4D,IAAA,QAAQ,EAAES;AAAtE,IADF,EAEGH,OAAO,IAAII,UAAX,IACC,6BAAC,wBAAD;AAAa,IAAA,UAAU,EAAEA,UAAzB;AAAqC,IAAA,KAAK,EAAEJ,OAA5C;AAAqD,IAAA,aAAa,EAAEkB;AAApE,IAHJ,CADF;AAQD;;AAEM,SAASC,SAAT,CAAmB;AAAE1B,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA;AAA9B,CAAnB,EAAsE;AAC3E,SAAQC,QAAD,IACL,6BAAC,kBAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,QAAQ,EAAEC;AALZ,IADF;AASD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Box } from 'ink';\nimport { OnSubmitCallback } from '../../types';\nimport { InputComponent } from '../input';\nimport { ChoicesList } from '../choices/components/choicesList';\nimport { ChoiceOption } from '../choices/components/item';\nimport { useChoicesNavigation } from '../choices/use-choices-navigation';\nimport { useEnterKeyHandler } from '../_helpers';\nimport { PatternHighlightItem } from './components/pattern-highlight-item';\nimport { listNodes, fuzzySearchNodes, PathNode } from './utils';\n\ninterface FuzzyPath {\n  message?: string;\n  placeholder?: string;\n  root: string;\n  filter: (node: PathNode) => boolean;\n}\n\ninterface FuzzyPathProps extends FuzzyPath {\n  onSubmit: OnSubmitCallback;\n}\n\ntype PathNodesState = PathNode[] | null;\n\ntype ChoiceOptionsState = ChoiceOption[];\n\ntype ActiveItemState = ChoiceOption | null;\n\nconst MATCHES_LIMIT = 7;\n\nconst DEFAULT_PLACEHOLDER = '(Use arrow keys or start typing)';\n\nexport function FuzzyPathComponent({\n  message,\n  placeholder = DEFAULT_PLACEHOLDER,\n  root,\n  filter,\n  onSubmit,\n}: FuzzyPathProps) {\n  const [nodes, setNodes] = useState<PathNodesState>(null);\n  const [matches, setMatches] = useState<ChoiceOptionsState>([]);\n  const [pattern, setPattern] = useState<string>('');\n\n  const activeItem = useChoicesNavigation(matches);\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(activeItem.value);\n  }, [onSubmit, activeItem]);\n\n  useEnterKeyHandler(handleSubmit);\n\n  // get the list of files based on the 'root' folder\n  useEffect(() => {\n    (async function getNodes() {\n      const calculatedNodes = await listNodes(root);\n      setNodes(calculatedNodes.filter(filter));\n    })();\n  }, [root, filter]);\n\n  // search files by pattern\n  useEffect(() => {\n    const searchResults = fuzzySearchNodes(nodes, pattern);\n    const searchResultsSliced = searchResults\n      .slice(0, MATCHES_LIMIT)\n      .map(match => ({ key: match.path, label: match.relativePath, value: match }));\n    setMatches(searchResultsSliced);\n  }, [nodes, pattern]);\n\n  return (\n    <Box flexDirection=\"column\">\n      <InputComponent message={message} placeholder={placeholder} onChange={setPattern} />\n      {matches && activeItem && (\n        <ChoicesList activeItem={activeItem} items={matches} itemComponent={PatternHighlightItem} />\n      )}\n    </Box>\n  );\n}\n\nexport function fuzzyPath({ message, placeholder, root, filter }: FuzzyPath) {\n  return (onSubmit: OnSubmitCallback) => (\n    <FuzzyPathComponent\n      message={message}\n      placeholder={placeholder}\n      root={root}\n      filter={filter}\n      onSubmit={onSubmit}\n    />\n  );\n}\n"],"file":"index.js"}