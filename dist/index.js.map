{"version":3,"sources":["../src/index.ts"],"names":["garson","results","garsonHandler","prompts","prompt","key","promptHandler","action","actionHandler"],"mappings":";;;;;;;;;AAiCO,SAASA,MAAT,CAAgBC,OAAhB,EAAkC;AACvC,SAAOC,aAAa,CAAC;AAAED,IAAAA;AAAF,GAAD,CAApB;AACD;;AAED,SAASC,aAAT,CAAuB;AAAED,EAAAA,OAAO,GAAG,EAAZ;AAAgBE,EAAAA,OAAO,GAAG;AAA1B,CAAvB,EAAqE;AACnE,SAAO;AACLC,IAAAA,MAAM,EAAE,CAACC,GAAD,EAAWD,OAAX,KAA8BE,aAAa,CAAC;AAAEL,MAAAA,OAAF;AAAWI,MAAAA,GAAX;AAAgBD,MAAAA,MAAM,EAANA,OAAhB;AAAwBD,MAAAA;AAAxB,KAAD,CAD9C;AAELI,IAAAA,MAAM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAGA,MAAD,IAAoBC,aAAa,CAAC;AAAEP,MAAAA,OAAF;AAAWE,MAAAA,OAAX;AAAoBI,MAAAA;AAApB,KAAD,CAAnC;AAFD,GAAP;AAID;;AAED,SAASD,aAAT,CAAuB;AAAEL,EAAAA,OAAF;AAAWI,EAAAA,GAAX;AAAgBD,EAAAA,MAAhB;AAAwBD,EAAAA;AAAxB,CAAvB,EAAwE;AACtE,SAAOD,aAAa,CAAC;AAAED,IAAAA,OAAF;AAAWE,IAAAA,OAAO,EAAE,CAAC,GAAGA,OAAJ,EAAa;AAAEE,MAAAA,GAAF;AAAOD,MAAAA;AAAP,KAAb;AAApB,GAAD,CAApB;AACD;;AAED,SAASI,aAAT,CAAuB;AAAEP,EAAAA,OAAF;AAAWE,EAAAA,OAAX;AAAoBI,EAAAA;AAApB,CAAvB,EAAmE;AACjE;AACA,SAAO;AACLN,IAAAA,OADK;AAELE,IAAAA,OAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["interface Results {\n  [key: string]: any;\n}\n\ntype key = string;\n\ninterface Prompt {\n  key: key;\n  prompt: any;\n}\n\ntype prompts = Prompt[];\n\ntype action = () => void;\n\ninterface GarsonParams {\n  results?: Results;\n  prompts?: prompts;\n}\n\ninterface PromptParams {\n  results: Results;\n  key: key;\n  prompt: Prompt;\n  prompts: prompts;\n}\n\ninterface ActionParams {\n  results: Results;\n  prompts: prompts;\n  action: action;\n}\n\nexport function garson(results: Results) {\n  return garsonHandler({ results });\n}\n\nfunction garsonHandler({ results = {}, prompts = [] }: GarsonParams) {\n  return {\n    prompt: (key: key, prompt: Prompt) => promptHandler({ results, key, prompt, prompts }),\n    action: (action: action) => actionHandler({ results, prompts, action }),\n  };\n}\n\nfunction promptHandler({ results, key, prompt, prompts }: PromptParams) {\n  return garsonHandler({ results, prompts: [...prompts, { key, prompt }] });\n}\n\nfunction actionHandler({ results, prompts, action }: ActionParams) {\n  // The result of .action() is picked up by a runner\n  return {\n    results,\n    prompts,\n    action,\n  };\n}\n"],"file":"index.js"}